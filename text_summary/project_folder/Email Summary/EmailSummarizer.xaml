<Activity mc:Ignorable="sap sap2010" x:Class="EmailSummarizer" this:EmailSummarizer.In_NumOfEmails="1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_AccountInfo" Type="InArgument(x:String)" />
    <x:Property Name="In_NumOfEmails" Type="InArgument(x:Int32)" />
    <x:Property Name="In_Dgram" Type="InArgument(x:Boolean)" />
    <x:Property Name="In_GoogleT" Type="InArgument(x:String)" />
  </x:Members>
  <this:EmailSummarizer.In_Dgram>
    <InArgument x:TypeArguments="x:Boolean" />
  </this:EmailSummarizer.In_Dgram>
  <this:EmailSummarizer.In_GoogleT>
    <InArgument x:TypeArguments="x:String" />
  </this:EmailSummarizer.In_GoogleT>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>624,1843</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="46">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>Microsoft.Office.Interop.Word</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>UiPath.MicrosoftOffice365.Models</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="50">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Python</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>Microsoft.Office.Interop.Word</AssemblyReference>
      <AssemblyReference>UiPathTeam.FileConverter.Activities</AssemblyReference>
      <AssemblyReference>UiPathTeam.FileConverter</AssemblyReference>
      <AssemblyReference>UiPath.MicrosoftOffice365</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="EmailSummarizer" sap:VirtualizedContainerService.HintSize="604,1783" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="Emails" />
      <Variable x:TypeArguments="snm:MailMessage" Name="Message" />
      <Variable x:TypeArguments="x:String" Name="filePath" />
      <Variable x:TypeArguments="x:Boolean" Default="True" Name="Diagram" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" Name="configDict" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke readConfig workflow" sap:VirtualizedContainerService.HintSize="562,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_7" UnSafe="False" WorkflowFileName="Config\readConfig.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <OutArgument x:TypeArguments="scg:Dictionary(x:String, ui:GenericValue)" x:Key="out_Config">[configDict]</OutArgument>
      </ui:InvokeWorkflowFile.Arguments>
    </ui:InvokeWorkflowFile>
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="562,52" sap2010:WorkflowViewState.IdRef="CommentOut_2">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="242,144" sap2010:WorkflowViewState.IdRef="Sequence_8">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <If Condition="[System.IO.Directory.Exists(filePath)]" DisplayName="Create Directory if it doesn't exist" sap:VirtualizedContainerService.HintSize="200,52" sap2010:WorkflowViewState.IdRef="If_3">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Else>
              <ui:CreateDirectory ContinueOnError="{x:Null}" DisplayName="Create Directory" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[filePath]" />
            </If.Else>
          </If>
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="562,315" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:GetOutlookMailMessages Filter="{x:Null}" Account="[configDict(&quot;EmailAdress&quot;)]" DisplayName="Get Outlook Mail Messages" GetAttachements="False" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_2" MailFolder="[configDict(&quot;TargetFolder&quot;)]" MarkAsRead="False" Messages="[Emails]" OnlyUnreadMessages="False" TimeoutMS="50000" Top="[configDict(&quot;NumberOfEmails&quot;)]" />
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:ArgumentException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:ArgumentException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:ArgumentException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new system.Exception]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4" Reason="The specified folder does not exist in Outlook&#xA;Consider folder name based on system language&#xA;&#xA;e.g)&#xA;受信トレイ for Japanese&#xA;Inbox for English" />
          </ActivityAction>
        </Catch>
        <Catch x:TypeArguments="s:TimeoutException" sap:VirtualizedContainerService.HintSize="404,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:TimeoutException">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:TimeoutException" Name="exception" />
            </ActivityAction.Argument>
            <TerminateWorkflow DisplayName="Terminate Workflow" Exception="[new system.Exception]" sap:VirtualizedContainerService.HintSize="200,22" sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5" Reason="Check internet connection &#xA;or &#xA;email account might be invalid" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="330,59" sap2010:WorkflowViewState.IdRef="MessageBox_3" Text="[&quot;Email used for Extraction: &quot;+configDict(&quot;EmailAdress&quot;)]" TopMost="True" />
      </TryCatch.Finally>
    </TryCatch>
    <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="562,1018" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Emails]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="snm:MailMessage">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="email" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Email Summary" sap:VirtualizedContainerService.HintSize="526,883" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:String" Name="ShorterEmailBody" />
              <Variable x:TypeArguments="x:String" Name="RawEmailBody" />
              <Variable x:TypeArguments="x:String" Name="emailDate" />
              <Variable x:TypeArguments="x:String" Name="emailName" />
              <Variable x:TypeArguments="ui:GenericValue" Name="fileName" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_4">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[emailName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[email.From.DisplayName]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke emailBodyFilter workflow" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_10" UnSafe="False" WorkflowFileName="Email Summary\emailBodyFilter.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="In_emailBody">[email.Body]</InArgument>
                <OutArgument x:TypeArguments="x:String" x:Key="Out_emailBody">[RawEmailBody]</OutArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_5">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[emailDate]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">[email.Headers("Date")]</InArgument>
              </Assign.Value>
            </Assign>
            <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Email_to_SmrzdText workflow" sap:VirtualizedContainerService.HintSize="484,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Email Summary\Email_to_SmrzdText.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="ui:GenericValue" x:Key="In_ProcessedEmailBody">[RawEmailBody]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_emailName">[emailName]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_filePath">[configDict("SavePath")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_emailDate">[emailDate]</InArgument>
                <InArgument x:TypeArguments="x:Int32" x:Key="In_EmailWordCount">[configDict("EmailWordCount")]</InArgument>
                <InArgument x:TypeArguments="x:String" x:Key="In_emailSubject">[email.Subject]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <Assign sap:VirtualizedContainerService.HintSize="484,60" sap2010:WorkflowViewState.IdRef="Assign_6">
              <Assign.To>
                <OutArgument x:TypeArguments="ui:GenericValue">[fileName]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="ui:GenericValue">["From"+emailName+emailDate.ToString()]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[In_Dgram]" sap:VirtualizedContainerService.HintSize="484,237" sap2010:WorkflowViewState.IdRef="If_4">
              <If.Then>
                <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Text_To_Diagram workflow" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Utils/Text_To_Diagram.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="In_RawText">[System.Text.RegularExpressions.Regex.Replace(RawemailBody, "\n", " ")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_filePath">EmailSummary/HTMLfiles/</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_name">[fileName.Replace(":","").Replace(" ","").Replace("/","")]</InArgument>
                    <InArgument x:TypeArguments="x:String" x:Key="In_GoogleT">[In_GoogleT]</InArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
              </If.Then>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" Buttons="Ok" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="562,59" sap2010:WorkflowViewState.IdRef="MessageBox_4" Text="[&quot;All read emails are saved in: &quot;+System.Environment.NewLine+Directory.GetCurrentDirectory.ToString + &quot;\Output\EmailSummary&quot;]" TopMost="True" />
  </Sequence>
</Activity>